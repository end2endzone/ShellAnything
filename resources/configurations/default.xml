<?xml version="1.0" encoding="utf-8"?>
<!--
  Help:
    This is a quick reminder about how to use the property system. 
    The following table defines the list of dynamic properties and their utility:
  Selection-based properties:
    ┌──────────────────────────────┬─────────────────────────────────────────────────────────────────────────┐
    │           Property           │                               Description                               │
    ├──────────────────────────────┼─────────────────────────────────────────────────────────────────────────┤
    │ selection.path               │ Matches the full path of the clicked element.                           │
    │ selection.dir                │ Matches the directory of the clicked element.                           │
    │ selection.filename           │ Matches the filename of the clicked element.                            │
    │ selection.filename.noext     │ Matches the filename of the clicked element without the file extension. │
    │ selection.parent.path        │ Matches the full path of the parent element.                            │
    │ selection.parent.filename    │ Matches the filename of the parent element.                             │
    │ selection.filename.extension │ Matches the file extension of the clicked element.                      │
    │ selection.drive.letter       │ Matches the drive letter of the clicked element. For example 'C'.       │
    │ selection.drive.path         │ Matches the drive path of the clicked element. For example 'C:'.        │
    ├──────────────────────────────┼─────────────────────────────────────────────────────────────────────────┤
    │ selection.count              │ Matches the number of clicked elements (files and directories).         │
    │ selection.files.count        │ Matches the number of clicked files.                                    │
    │ selection.directories.count  │ Matches the number of clicked directories.                              │
    └──────────────────────────────┴─────────────────────────────────────────────────────────────────────────┘
  Fixed properties:
    ┌───────────────────────┬─────────────────────────────────────────────────────┐
    │       Property        │                     Description                     │
    ├───────────────────────┼─────────────────────────────────────────────────────┤
    │ application.path      │ Matches the full path of the shell extension DLL.   │
    │ application.directory │ Matches the directory of the shell extension.       │
    │ log.directory         │ Matches the directory where the logs are created.   │
    │ config.directory      │ Matches the directory of the configuration files.   │
    │ home.directory        │ Matches the home directory of the current user.     │
    │ path.separator        │ Matches the \ character.                            │
    │ line.separator        │ Matches the \r\n string.                            │
    │ newline               │ Matches the \r\n string. Same as ${line.separator}. │
    └───────────────────────┴─────────────────────────────────────────────────────┘
  Environment variables properties:  
    ${env.XYZ} refers to environment variable XYZ
  Rules:
   * Property names must not contain spaces
   * Property lists must be separated by ';' character
   * File extension lists must be separated by ';' character
  
-->
<root>
  <shell>
  
    <menu separator="true" />
    
    <menu name="Copy to clipboard...">
      <icon path="C:\Windows\System32\shell32.dll" index="134" />
      <menu name="Full Path" description="Copy the selected file path(s) to the clipboard">
        <icon fileextension="${selection.filename.extension}" />
        <actions>
          <clipboard value="${selection.path}"/>
        </actions>
      </menu>
      <menu name="Filename" description="Copy the selected filename(s) to the clipboard">
        <icon path="C:\Windows\System32\imageres.dll" index="2" />
        <actions>
          <clipboard value="${selection.filename}"/>
        </actions>
      </menu>
      <menu name="Filename (without extension)" description="Copy the selected filename(s) (without extension) to the clipboard">
        <icon path="C:\Windows\System32\shell32.dll" index="0" />
        <actions>
          <clipboard value="${selection.filename.noext}"/>
        </actions>
      </menu>
      <menu name="Parent Folder">
        <icon path="C:\Windows\System32\shell32.dll" index="3" />
        <actions>
          <clipboard value="${selection.parent.path}"/>
        </actions>
      </menu>
    </menu>
    
    <menu name="Open command prompt here">
      <icon path="C:\Windows\System32\cmd.exe" index="0" />
      <visibility maxfiles="0" maxfolders="1" />
      <actions>
        <exec path="${env.ComSpec}" basedir="${selection.path}" />
      </actions>
    </menu>
    
    <menu name="Run with parameters..." description="Run the selected executable with parameters">
      <icon path="C:\Windows\System32\shell32.dll" index="76" />
      <visibility maxfiles="1" maxfolders="0" fileextensions="com;exe;bat;cmd" />
      <actions>
        <prompt name="myarguments" title="Please enter the command line parameters" />
        <exec path="${selection.path}" arguments="${myarguments}" />
      </actions>
    </menu>

    <!--Show file selection or compare capabilities-->
    <menu name="Compare">
      <visibility maxfiles="1" maxfolders="0" />
      <icon path="C:\Windows\System32\dsuiext.dll" index="32" />
      <menu name="Select file '${selection.filename}'">
        <actions>
          <!-- Remember the selected file in properties. The path will be used later -->
          <property name="compare.first.selection.path"     value="${selection.path}" />
          <property name="compare.first.selection.filename" value="${selection.filename}" />
        </actions>
      </menu>
      <menu name="Compare with '${compare.first.selection.filename}' (text)">
        <icon path="C:\Windows\System32\imageres.dll" index="14" />
        <!-- Hide this menu until a choice was made in 'Select file' menu -->
        <visibility properties="compare.first.selection.filename" />
        <actions>
          <exec path="${env.ComSpec}" arguments="/K FC /L &quot;${compare.first.selection.path}&quot; &quot;${selection.path}&quot;" />

          <!--Reset the properties now that compare is complete-->
          <property name="compare.first.selection.path"     value="" />
          <property name="compare.first.selection.filename" value="" />
        </actions>
      </menu>
      <menu name="Compare with '${compare.first.selection.filename}' (binary)">
        <icon path="C:\Windows\System32\compstui.dll" index="39" />
        <visibility properties="compare.first.selection.filename" />
        <actions>
          <exec path="${env.ComSpec}" arguments="/K FC /B &quot;${compare.first.selection.path}&quot; &quot;${selection.path}&quot;" />

          <!--Reset the properties now that compare is complete-->
          <property name="compare.first.selection.path"     value="" />
          <property name="compare.first.selection.filename" value="" />
        </actions>
      </menu>
    </menu>

    <!--Low level find file-->
    <menu name="Find a file...">
      <icon path="C:\Windows\System32\shell32.dll" index="22" />
      <visibility maxfiles="0" maxfolders="1" />
      <actions>
        <prompt name="findpattern" title="Please enter a file wildcard pattern..." />
        <exec path="${env.ComSpec}" basedir="${selection.path}" arguments="/K dir /a /s /b &quot;${findpattern}&quot;" />
        <property name="findpattern" value="" />
      </actions>
    </menu>
    
    <menu name="Find in files...">
      <icon path="C:\Windows\System32\shell32.dll" index="55" />
      <visibility maxfiles="0" maxfolders="1" />
      <actions>
        <prompt name="filepattern" title="Question 1 of 2.${newline}Please enter the file wildcard pattern..." />
        <prompt name="textpattern" title="Question 2 of 2.${newline}Please enter the searched text..." />
        <exec path="${env.ComSpec}" basedir="${selection.path}" arguments="/K FINDSTR /S /M &quot;/C:${textpattern}&quot; ${filepattern}" />
        <property name="filepattern" value="" />
        <property name="textpattern" value="" />
      </actions>
    </menu>

    <!-- Different type of checksum -->
    <menu name="Checksum">
      <icon path="C:\Windows\System32\shell32.dll" index="104" />
      <visibility maxfiles="1" maxfolders="0" />
      <menu name="MD5">
        <actions>
          <exec path="${env.ComSpec}" arguments="/K CertUtil -hashfile &quot;${selection.path}&quot; MD5" />
        </actions>
      </menu>
      <menu name="SHA1">
        <actions>
          <exec path="${env.ComSpec}" arguments="/K CertUtil -hashfile &quot;${selection.path}&quot; SHA1" />
        </actions>
      </menu>
      <menu name="SHA256">
        <actions>
          <exec path="${env.ComSpec}" arguments="/K CertUtil -hashfile &quot;${selection.path}&quot; SHA256" />
        </actions>
      </menu>
      <menu name="SHA512">
        <actions>
          <exec path="${env.ComSpec}" arguments="/K CertUtil -hashfile &quot;${selection.path}&quot; SHA512" />
        </actions>
      </menu>
      <menu name="7-Zip Checksums">
        <visibility maxfiles="1" maxfolders="0" exists="C:\Program Files\7-Zip\7zG.exe" />
        <actions>
          <exec path="C:\Program Files\7-Zip\7zG.exe" arguments="h -scrcCRC32 -scrcCRC64 -scrcSHA1 -scrcSHA256 -scrcBLAKE2sp  &quot;${selection.path}&quot;" />
        </actions>
      </menu>
    </menu>

    <!-- symbolic links -->
    <menu name="Symbolic Links">
      <!-- <icon path="C:\Windows\System32\imageres.dll" index="154" />-->
      <icon path="C:\Windows\System32\mmcndmgr.dll" index="69" />
      <!-- See also https://stackoverflow.com/questions/19098101/how-to-open-an-elevated-cmd-using-command-line-for-windows -->
      <visibility maxfiles="0" maxfolders="1" />
      <menu name="Cancel link creation." description="">
        <visibility properties="symbolic.source.path" />
        <actions>
          <property name="symbolic.source.path"     value="" />
          <property name="symbolic.source.filename" value="" />
        </actions>
      </menu>
      <menu name="Set as source...">
        <actions>
          <property name="symbolic.source.path"     value="${selection.path}" />
          <property name="symbolic.source.filename" value="${selection.filename}" />
        </actions>
      </menu>
      <menu name="Create '${symbolic.source.filename}' link as..." description="Creates a symbolic link.">
        <visibility properties="symbolic.source.path" />
        <menu name="Symbolic Link" description="Creates a directory symbolic link.">
          <visibility properties="symbolic.source.path" />
          <actions>
            <exec path="powershell.exe" arguments="-Command &quot;Start-Process cmd -ArgumentList '/K mklink /D \&quot;${selection.path}\${symbolic.source.filename}\&quot; \&quot;${symbolic.source.path}\&quot;' -Verb RunAs&quot;" />
          </actions>
        </menu>
        <menu name="Hard Link" description="Creates a directory hard link.">
          <visibility properties="symbolic.source.path" />
          <actions>
            <exec path="powershell.exe" arguments="-Command &quot;Start-Process cmd -ArgumentList '/K mklink /H \&quot;${selection.path}\${symbolic.source.filename}\&quot; \&quot;${symbolic.source.path}\&quot;' -Verb RunAs&quot;" />
          </actions>
        </menu>
        <menu name="Junction" description="Creates a directory junction.">
          <visibility properties="symbolic.source.path" />
          <actions>
            <exec path="powershell.exe" arguments="-Command &quot;Start-Process cmd -ArgumentList '/K mklink /J \&quot;${selection.path}\${symbolic.source.filename}\&quot; \&quot;${symbolic.source.path}\&quot;' -Verb RunAs&quot;" />
          </actions>
        </menu>
      </menu>
    </menu>
    
    <menu separator="true" />
    
  </shell>
</root>